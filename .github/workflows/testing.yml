name: CI/CD Pipeline for Three-Tier App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # This action will automatically use Node.js 20

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Install frontend dependencies
        working-directory: ./web
        run: npm ci

      - name: Build frontend
        working-directory: ./web
        run: npm run build

      - name: Run frontend tests
        working-directory: ./web
        run: npm test

      - name: Deploy frontend
        run: |
          # Example deployment script for S3, Netlify, or other providers
          # aws s3 sync ./frontend/build s3://your-bucket-name
          echo "Deploy frontend"

  backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Uses Node.js 20 automatically

      - name: Setup Node.js (for backend)
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Install backend dependencies
        working-directory: ./api
        run: npm ci

      - name: Run backend tests
        working-directory: ./api
        run: npm test

      - name: Build backend
        working-directory: ./api
        run: npm run build

      - name: Deploy backend
        run: |
          # Example deployment to EC2, Heroku, or any cloud server
          # scp -r ./backend/build your-server:/path/to/deploy
          echo "Deploy backend"

  database:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Uses Node.js 20 automatically

      - name: Apply database migrations
        run: |
          # Run DB migration scripts (e.g., Flyway, Django migrate, etc.)
          echo "Apply database migrations"

      - name: Run database health checks
        run: |
          # Perform health checks on the database
          echo "Check database health"
